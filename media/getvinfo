#!/usr/bin/perl

@s = ();
%f = ();
$total = 0;
sub tohms {
  my ($t) = @_;
  my ($d,$h,$m,$s);
  $s = $t % 60;
  $m = int($t / 60) % 60;
  $h = int($t / 3600) % 24;
  $d = int($t / (3600*24));
  my ($x);
  $x = "";
  if( $d ) { $x .= "${d}d";}
  if( $h ) { $x .= "${h}h";}
  if( $m ) { $x .= "${m}m";}
  if( $s ) { $x .= "${s}";}
  if( $x =~ /^$/ ) { $x = "0"; }
  return $x;
}
for $file(@ARGV) {
  $file =~ s/"/\\"/g;
  $cmd = qq{ffprobe "$file" 2>&1};
  open(PIPE,"$cmd |");
  @a = <PIPE>;
  close PIPE;
  $dur = -1;
  $width = -1;
  $height = -1;
  $fps = -1;
  for(@a) {
    if(/Duration:(.*),/ && $dur == -1) {
      $_ = $1;
      #print "Duration $1\n";
      s/,.*$//;
			s/\..*//;
      @hms = split /:/;
      $dur = 3600*int($hms[0]) + 60*int($hms[1]) + int($hms[2]);
      $total += $dur;
    }
    if(/Video:.*\s(\d{2,})x(\d+)[^\d]/) {
      $width = $1;
      $height = $2;
      #print "Dimensions $width $height\n";
    }
    if(/Video:.*\s(\d[\d\.]+) fps/) {
      $fps = $1;
      #print "Frameraet $fps\n";
    }
    if( $dur != -1 && $width != -1 && $fps != -1 ) { last; }
  }
  if( $dur >= 0 || $width >= 0 ) {
    if( scalar(@ARGV) > 1 ) {
        print "$file: $dur ".(tohms($dur))." $width $height $fps\n";
    } else {
        print "$dur ".(tohms($dur))." $width $height $fps\n";
    }
  } else {
    print "$file: no details\n";
  }
}
if( scalar(@ARGV) > 1 ) {
  print "total duration: $total\n";
}
