#!/usr/bin/python3
import os, sys, time, math, colors, re
def newline():
  print()
def get_width():
  return os.get_terminal_size().columns
def showline(x,color='white',style=""):
  x = str(x)
  width = get_width()
  cx = "[ "+colors.color(x,fg=color,style=style)+" ]"
  print(f"\r{cx:=^{width}}",end="")
def select_colour(t):
  if t < 10:
    return 'red'
  if t < 30:
    return 'yellow'
  else:
    return 'green'
def dosleep(t):
  t0 = int(math.floor(t))
  t1 = t - t0
  if t1 < 0.01:
    t1 = 0
  showline(f"sleeping for {t} seconds",color=select_colour(t))
  if t1 > 0:
    time.sleep(t1)
  while t0 > 0:
    showline(f"sleeping for {t0} seconds",color=select_colour(t0))
    t0 -= 1
    time.sleep(1)
  showline(f"finished sleeping",color="green")
  newline()
def main():
  args = sys.argv[1:]
  txs = []
  try:
    for arg in args:
      if m := re.match(r"(?:(\d+)d)?(?:(\d+)h)?(?:(\d+)m)?(?:(\d+(?:\.\d+)?)s?)?$",arg):
        d, h, m, s = map(lambda t: float(t) if t is not None else 0.0, m.groups())
        txs.append(s+60*(m+60*(h+24*d)))
      else:
        raise ValueError()
  except ValueError:
    print(f"sleepy t0 [t1 ...]\nwhere t0 etc are numbers or take the form 3h45m34s with the latter s optional")
    exit(1)
  t = sum(txs)
  #print(f"total time: {t}")
  #exit()
  dosleep(t)
if __name__ == "__main__":
  try:
    main()
  except KeyboardInterrupt:
    print("Ctrl-C")
    exit(1)
